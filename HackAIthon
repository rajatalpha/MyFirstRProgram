library(shiny)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(psych)


## Only run examples in interactive R sessions
if (interactive()) {
  
  ui <- fluidPage(
    
    # App title ----
    titlePanel("Dashboard For Data Analysis"),
    
    # Sidebar layout with input and output definitions ----
    sidebarLayout(
      
      # Sidebar panel for inputs ----
      sidebarPanel(
        
        # Input: Select a file ----
        fileInput("file1", "Choose CSV File",
                  multiple = TRUE,
                  accept = c("text/csv",
                             "text/comma-separated-values,text/plain",
                             ".csv")),
        # Horizontal line ----
        tags$hr()
        # Select Variable from the selected Dataset 
        
        selectInput("vari", "Variable", 
                    choices=colnames(df),
                               
                    hr(),
                    helpText("")  
                    
                    
        ),  
        
        ########################## 
        
        # Main panel for displaying outputs ----
        mainPanel(
          
          # Output: Data file ----
          DT::dataTableOutput('contents'),
          verbatimTextOutput("summary"),
          plotOutput('plot')
        )  
      )
    )
    
    server <- function(input, output, session){
      myData <- reactive({
        inFile <- input$file1
        if (is.null(inFile)) return(NULL)
        data123 <- read.csv(inFile$datapath, header = TRUE)
      })
      
      output$contents <- DT::renderDataTable({
        DT::datatable(myData())       
      })
      output$select <- renderUI({
        df <- myData()
        selectInput("variable", "Select Variables:",names(df))
        
      })
      h2("Summary Statistics")
      output$summary <- renderPrint({
        df <- myData()
        df <- df[,input$variable]
        summary(df) 
      })
      
      output$summary <- renderPrint({
        df <- myData()
        df <- df[,input$variable]
        describe(df) 
      })
      
      output$plot <- renderPlot({
        df <- myData()
        df <- df[,input$variable]
        boxplot(df,col="sky blue",border="purple",main=input$variable)
      })
    }
    
    shinyApp(ui,server)
}
